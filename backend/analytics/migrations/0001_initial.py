# Generated by Django 4.2.7 on 2025-05-24 14:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('quizzes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('rooms', '0001_initial'),
        ('resources', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_users', models.IntegerField(default=0)),
                ('active_users', models.IntegerField(default=0)),
                ('new_users', models.IntegerField(default=0)),
                ('total_rooms', models.IntegerField(default=0)),
                ('active_rooms', models.IntegerField(default=0)),
                ('total_quizzes', models.IntegerField(default=0)),
                ('quiz_attempts', models.IntegerField(default=0)),
                ('resource_uploads', models.IntegerField(default=0)),
                ('resource_downloads', models.IntegerField(default=0)),
                ('forum_posts', models.IntegerField(default=0)),
                ('events_created', models.IntegerField(default=0)),
                ('storage_used', models.BigIntegerField(default=0, help_text='Storage used in bytes')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('room_join', 'Room Join'), ('room_leave', 'Room Leave'), ('quiz_start', 'Quiz Start'), ('quiz_complete', 'Quiz Complete'), ('resource_view', 'Resource View'), ('resource_download', 'Resource Download'), ('forum_post', 'Forum Post'), ('event_register', 'Event Register'), ('profile_update', 'Profile Update')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.IntegerField(blank=True, help_text='Duration in seconds', null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_activities', to='quizzes.quiz')),
                ('resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_activities', to='resources.resource')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_activities', to='rooms.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RoomAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_participants', models.IntegerField(default=0)),
                ('active_participants', models.IntegerField(default=0)),
                ('total_quizzes', models.IntegerField(default=0)),
                ('completed_quizzes', models.IntegerField(default=0)),
                ('total_resources', models.IntegerField(default=0)),
                ('total_downloads', models.IntegerField(default=0)),
                ('average_quiz_score', models.FloatField(blank=True, null=True)),
                ('engagement_score', models.FloatField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='rooms.room')),
            ],
        ),
        migrations.CreateModel(
            name='QuizAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_attempts', models.IntegerField(default=0)),
                ('completed_attempts', models.IntegerField(default=0)),
                ('average_score', models.FloatField(blank=True, null=True)),
                ('average_time_taken', models.IntegerField(blank=True, help_text='Average time in seconds', null=True)),
                ('highest_score', models.FloatField(blank=True, null=True)),
                ('lowest_score', models.FloatField(blank=True, null=True)),
                ('pass_rate', models.FloatField(blank=True, null=True)),
                ('difficulty_rating', models.FloatField(blank=True, null=True)),
                ('question_analytics', models.JSONField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('quiz', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='quizzes.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='UserEngagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('login_count', models.IntegerField(default=0)),
                ('session_duration', models.IntegerField(default=0, help_text='Total session duration in seconds')),
                ('quiz_attempts', models.IntegerField(default=0)),
                ('resources_accessed', models.IntegerField(default=0)),
                ('forum_interactions', models.IntegerField(default=0)),
                ('events_attended', models.IntegerField(default=0)),
                ('engagement_score', models.FloatField(default=0.0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
